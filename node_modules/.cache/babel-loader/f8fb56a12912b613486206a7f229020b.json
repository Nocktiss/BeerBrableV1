{"ast":null,"code":"import _slicedToArray from \"/home/nocktis/Documents/Stage_Brable_Propre/Brabletest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nocktis/Documents/Stage_Brable_Propre/Brabletest/src/components/LoginPage/LoginPage.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport validate from '../RegisterPage/ValidateSchema/validate-spected';\nimport getValidationSchema from '../RegisterPage/ValidateSchema/getValidationSchema-spected';\nimport '../RegisterPage/RegisterPage.scss';\nconst styleInput = {\n  background: 'white',\n  height: '72px',\n  width: '119px',\n  borderRadius: '20px',\n  textAlign: 'center',\n  border: 'none',\n  fontSize: '30px'\n};\nconst initialValues = {\n  username: '',\n  password: ''\n};\nexport default function SignInForm() {\n  const token = localStorage.getItem(\"token\");\n  console.log;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        logged = _useState2[0],\n        setLogged = _useState2[1];\n\n  const onSubmit = async function onSubmit(values) {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:4242/loginUser',\n      data: values,\n      headers: {\n        'Authorization': \"Bearer \".concat(token)\n      }\n    }).then(res => {\n      localStorage.setItem(\"token\", res.headers[\"x-access-token\"]);\n      setLogged(true);\n    }).catch(function (erreur) {\n      //On traite ici les erreurs Ã©ventuellement survenues\n      console.log(erreur);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, logged && React.createElement(Redirect, {\n    to: \"/PaymentScreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), !logged && React.createElement(\"div\", {\n    className: \"container-all-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: initialValues,\n    validate: validate(getValidationSchema),\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, ({\n    isSubmitting,\n    errors,\n    handleChange,\n    handleSubmit\n  }) => React.createElement(\"div\", {\n    className: \"form-create-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-name-register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Choisi un identifiant\")), React.createElement(\"div\", {\n    className: \"containerInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-input-nameLogin\",\n    placeholder: \"Pseudo\",\n    name: \"username\",\n    type: \"username\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-field-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, errors.username)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Saisi ton code \\xE0 4 chiffres\"), React.createElement(\"div\", {\n    name: \"pincode\",\n    className: \"pincode-input-container\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-field\",\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"box-holder\",\n    placeholder: \"0  0  0  0\",\n    minLength: \"4\",\n    maxLength: \"4\",\n    style: styleInput,\n    name: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-field-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, errors.password)), React.createElement(Link, {\n    to: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"forget-password\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Code oubli\\xE9 ?\")), React.createElement(\"div\", {\n    className: \"container-check-buttonLogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button-create-account\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, isSubmitting ? 'Redirection' : 'Je me connecte'))))));\n}","map":{"version":3,"sources":["/home/nocktis/Documents/Stage_Brable_Propre/Brabletest/src/components/LoginPage/LoginPage.js"],"names":["React","useState","Redirect","Link","Formik","axios","validate","getValidationSchema","styleInput","background","height","width","borderRadius","textAlign","border","fontSize","initialValues","username","password","SignInForm","token","localStorage","getItem","console","log","logged","setLogged","onSubmit","values","method","url","data","headers","then","res","setItem","catch","erreur","isSubmitting","errors","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Redirect } from \"react-router\"\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport axios from 'axios'\n\nimport validate from '../RegisterPage/ValidateSchema/validate-spected'\nimport getValidationSchema from '../RegisterPage/ValidateSchema/getValidationSchema-spected'\n\nimport '../RegisterPage/RegisterPage.scss'\n\nconst styleInput = {\n\tbackground: 'white',\n\theight: '72px',\n\twidth: '119px',\n\tborderRadius: '20px',\n\ttextAlign: 'center',\n\tborder: 'none',\n\tfontSize: '30px',\n}\n\nconst initialValues = {\n\tusername: '',\n\tpassword: '',\n}\n\nexport default function SignInForm() {\n\tconst token = localStorage.getItem(\"token\")\n\tconsole.log\n\tconst [logged, setLogged] = useState(false);\n\tconst onSubmit = async function onSubmit(values) {\n\t\taxios({\n\t\t\tmethod: 'POST',\n\t\t\turl: 'http://localhost:4242/loginUser',\n\t\t\tdata: values,\n\t\t\theaders: { 'Authorization': `Bearer ${token}` },\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tlocalStorage.setItem(\"token\", res.headers[\"x-access-token\"])\n\t\t\t\tsetLogged(true);\n\t\t\t})\n\t\t\t.catch(function (erreur) {\n\t\t\t\t//On traite ici les erreurs Ã©ventuellement survenues\n\t\t\t\tconsole.log(erreur);\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{logged && <Redirect to=\"/PaymentScreen\" />}\n\t\t\t{\n\t\t\t\t!logged && <div className=\"container-all-form\">\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\t\tvalidate={validate(getValidationSchema)}\n\t\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ isSubmitting, errors, handleChange, handleSubmit }) => (\n\t\t\t\t\t\t\t<div className=\"form-create-account\">\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"title-name-register\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"username\">Choisi un identifiant</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"containerInput\">\n\t\t\t\t\t\t\t\t\t\t<input className=\"form-input-nameLogin\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Pseudo\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"username\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-field-error\">{errors.username}</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label className=\"title-password\">Saisi ton code Ã  4 chiffres</label>\n\n\t\t\t\t\t\t\t\t\t<div name=\"pincode\" className=\"pincode-input-container\" onChange={handleChange} >\n\t\t\t\t\t\t\t\t\t\t<label className=\"form-field\" htmlFor=\"password\">\n\t\t\t\t\t\t\t\t\t\t\t<input className=\"box-holder\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"0  0  0  0\"\n\t\t\t\t\t\t\t\t\t\t\t\tminLength=\"4\"\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength=\"4\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={styleInput}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-field-error\">{errors.password}</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<Link to=\"\">\n\t\t\t\t\t\t\t\t\t<label className=\"forget-password\" href=\"\">Code oubliÃ© ?</label>\n\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t<div className=\"container-check-buttonLogin\">\n\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"button-create-account\" onClick={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t{isSubmitting ? 'Redirection' : 'Je me connecte'}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}</Formik>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\t)\n}"]},"metadata":{},"sourceType":"module"}