{"ast":null,"code":"import _slicedToArray from \"/home/nocktis/Documents/Stage_Brable_Propre/Brabletest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nocktis/Documents/Stage_Brable_Propre/Brabletest/src/components/RegisterPage/RegisterPage.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { Modal, ModalBody } from 'reactstrap';\nimport validate from './ValidateSchema/validate-spected';\nimport getValidationSchema from './ValidateSchema/getValidationSchema-spected';\nimport tchin from '../../assets/tchin.gif';\nimport brable from '../../assets/logoBrable.png';\nimport './RegisterPage.scss';\nconst styleInput = {\n  background: 'white',\n  height: '72px',\n  width: '119px',\n  borderRadius: '20px',\n  textAlign: 'center',\n  border: 'none',\n  fontSize: '30px'\n};\nconst initialValues = {\n  username: '',\n  phone: '',\n  password: '',\n  passwordConfirmation: '',\n  consent: false\n};\nexport default function RegisterPageContainer() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modalOpen = _useState2[0],\n        setModalOpen = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        redirect = _useState6[0],\n        setRedirect = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        count = _useState8[0],\n        setCount = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 1),\n        showError = _useState10[0];\n\n  ;\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 1),\n        loginError = _useState12[0];\n\n  const history = useHistory();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(count => count - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    let interval = null;\n\n    if (redirect) {\n      setRedirect(true);\n      interval = setInterval(() => {\n        history.replace(\"/PaymentsRegisterScreen\");\n      }, 3000);\n    }\n\n    return () => interval ? clearInterval(interval) : null;\n  }, [redirect, history]); // useRef for stock value (username)\n\n  let nameRef = useRef();\n\n  const onSubmit = async function onSubmit(values) {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:4242/registerUser',\n      data: values,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      setModalOpen(true);\n      setUsername(nameRef.current.value);\n      setRedirect(true);\n      setCount(4);\n    }).catch(function (error) {\n      console.error(error.data);\n      if (error.data === 'username or email already taken') console.log(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container-all-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: initialValues,\n    validate: validate(getValidationSchema),\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, ({\n    isSubmitting,\n    errors,\n    handleChange,\n    handleSubmit\n  }) => React.createElement(\"div\", {\n    className: \"form-create-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-name-register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Choisis un identifiant\")), React.createElement(\"div\", {\n    className: \"containerInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-input-name\",\n    ref: nameRef,\n    placeholder: \"Pseudo\",\n    name: \"username\",\n    type: \"username\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-field-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, errors.username)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-phone-register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Entr\\xE9e ton num\\xE9ro de t\\xE9l\\xE9phone\")), React.createElement(\"div\", {\n    className: \"containerInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-input-name\",\n    placeholder: \"06 XX XX XX XX\",\n    name: \"phone\",\n    type: \"phone\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-field-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, errors.phone)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Saisi ton code \\xE0 4 chiffres\"), React.createElement(\"div\", {\n    name: \"pincode\",\n    className: \"pincode-input-container\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-field\",\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"box-holder\",\n    placeholder: \"0  0  0  0\",\n    minLength: \"4\",\n    maxLength: \"4\",\n    style: styleInput,\n    name: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-field-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title-password-confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Confirme le code\"), React.createElement(\"div\", {\n    className: \"pincode-input-container\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-field\",\n    htmlFor: \"passwordConfirmation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"box-holder\",\n    placeholder: \"0  0  0  0\",\n    minLength: \"4\",\n    maxLength: \"4\",\n    style: styleInput,\n    name: \"passwordConfirmation\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-field-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, errors.passwordConfirmation))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkConsent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"consent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"consent\",\n    type: \"checkbox\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Je reconnais avoir lu et pris connaissance des termes, de la charte de confidentialit\\xE9 et des CGU, et les acc\\xE9ptes.\"))), React.createElement(\"div\", {\n    className: \"form-field-error-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, errors.consent)), React.createElement(\"div\", {\n    className: \"container-check-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button-create-account\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, isSubmitting ? 'Redirection' : 'Je créer mon compte')))), React.createElement(Modal, {\n    className: \"modalValidateRegister\",\n    isOpen: modalOpen,\n    toggle: () => setModalOpen(!modalOpen),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerModaluser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"welcomeRegister\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Bienvenue chez\"), \" \", React.createElement(\"img\", {\n    className: \"iconBrableRegister\",\n    src: brable,\n    alt: \"icone-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    className: \"userRegister\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, username), React.createElement(\"img\", {\n    className: \"iconBeer\",\n    src: tchin,\n    alt: \"icone-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/PaymentScreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"linkPayment\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"C'est l'heure de payer ta tourn\\xE9e !\")), React.createElement(\"img\", {\n    className: \"iconBeer2\",\n    src: tchin,\n    alt: \"icone-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"redirectCount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Redirection dans \", count, \"s.\")))));\n}\n;","map":{"version":3,"sources":["/home/nocktis/Documents/Stage_Brable_Propre/Brabletest/src/components/RegisterPage/RegisterPage.js"],"names":["React","useState","useRef","useEffect","Link","useHistory","Formik","axios","Modal","ModalBody","validate","getValidationSchema","tchin","brable","styleInput","background","height","width","borderRadius","textAlign","border","fontSize","initialValues","username","phone","password","passwordConfirmation","consent","RegisterPageContainer","modalOpen","setModalOpen","setUsername","redirect","setRedirect","count","setCount","showError","loginError","history","interval","setInterval","clearInterval","replace","nameRef","onSubmit","values","method","url","data","headers","then","current","value","catch","error","console","log","isSubmitting","errors","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\n\nimport axios from 'axios';\n\nimport { Modal, ModalBody } from 'reactstrap';\nimport validate from './ValidateSchema/validate-spected';\nimport getValidationSchema from './ValidateSchema/getValidationSchema-spected';\n\nimport tchin from '../../assets/tchin.gif'\nimport brable from '../../assets/logoBrable.png'\nimport './RegisterPage.scss'\n\nconst styleInput = {\n\tbackground: 'white',\n\theight: '72px',\n\twidth: '119px',\n\tborderRadius: '20px',\n\ttextAlign: 'center',\n\tborder: 'none',\n\tfontSize: '30px',\n}\n\nconst initialValues = {\n\tusername: '',\n\tphone: '',\n\tpassword: '',\n\tpasswordConfirmation: '',\n\tconsent: false,\n}\n\nexport default function RegisterPageContainer() {\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [username, setUsername] = useState('');\n\tconst [redirect, setRedirect] = useState(false);\n\tconst [count, setCount] = useState(0);\n\tconst [showError] = useState(false);;\n\tconst [loginError] = useState(false)\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n    const interval = setInterval(() => {\n      setCount(count => count - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\t\n\tuseEffect(() => {\n\t\tlet interval = null;\n    if (redirect) {  \n\t\t\tsetRedirect(true);\n\t\t\tinterval = setInterval(() => {\n\t\t\t\thistory.replace(\"/PaymentsRegisterScreen\")\n\t\t\t}, 3000);\n    }\n\t\treturn () => interval ? clearInterval(interval) : null;\n\t}, [redirect, history])\n\t\n\t// useRef for stock value (username)\n\tlet nameRef = useRef();\n\n\tconst onSubmit = async function onSubmit(values) {\n\t\taxios({\n\t\t\tmethod: 'POST',\n\t\t\turl: 'http://localhost:4242/registerUser',\n\t\t\tdata: values,\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tsetModalOpen(true);\n\t\t\t\tsetUsername(nameRef.current.value);\n\t\t\t\tsetRedirect(true);\n\t\t\t\tsetCount(4)\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.error(error.data);\n        if (error.data === 'username or email already taken')\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div className=\"container-all-form\">\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tvalidate={validate(getValidationSchema)}\n\t\t\t\tonSubmit={onSubmit}\n\t\t\t>\n\t\t\t\t{({ isSubmitting, errors, handleChange, handleSubmit }) => (\n\t\t\t\t\t<div className=\"form-create-account\">\n\t\t\t\t\t\t<div className=\"\">\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"title-name-register\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"username\">Choisis un identifiant</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"containerInput\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-input-name\"\n\t\t\t\t\t\t\t\t\t\tref={nameRef}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Pseudo\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"username\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-field-error\">{errors.username}</div>\n\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"title-phone-register\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"phone\">Entrée ton numéro de téléphone</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"containerInput\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-input-name\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"06 XX XX XX XX\"\n\t\t\t\t\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\t\t\t\t\ttype=\"phone\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-field-error\">{errors.phone}</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label className=\"title-password\">Saisi ton code à 4 chiffres</label>\n\n\t\t\t\t\t\t\t\t<div name=\"pincode\" className=\"pincode-input-container\" onChange={handleChange} >\n\t\t\t\t\t\t\t\t\t<label className=\"form-field\" htmlFor=\"password\">\n\t\t\t\t\t\t\t\t\t\t<input className=\"box-holder\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"0  0  0  0\"\n\t\t\t\t\t\t\t\t\t\t\tminLength=\"4\"\n\t\t\t\t\t\t\t\t\t\t\tmaxLength=\"4\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={styleInput}\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-field-error\">{errors.password}</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label className=\"title-password-confirm\">Confirme le code</label>\n\n\t\t\t\t\t\t\t\t<div className=\"pincode-input-container\" onChange={handleChange}>\n\t\t\t\t\t\t\t\t\t<label className=\"form-field\" htmlFor=\"passwordConfirmation\">\n\t\t\t\t\t\t\t\t\t\t<input className=\"box-holder\" placeholder=\"0  0  0  0\" minLength=\"4\" maxLength=\"4\" style={styleInput} name=\"passwordConfirmation\" type=\"password\" />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-field-error\">{errors.passwordConfirmation}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"checkConsent\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"consent\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"consent\"\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span>Je reconnais avoir lu et pris connaissance des termes, de la charte de confidentialité et des CGU, et les accéptes.</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-field-error-check\">{errors.consent}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"container-check-button\">\n\t\t\t\t\t\t\t<button className=\"button-create-account\" type=\"submit\" onClick={handleSubmit}>{isSubmitting ? 'Redirection' : 'Je créer mon compte'}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}</Formik>\n\n\t\t\t<Modal className=\"modalValidateRegister\" isOpen={modalOpen} toggle={() => setModalOpen(!modalOpen)} >\n\t\t\t\t<div className=\"containerModaluser\">\n\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t<h1 className=\"welcomeRegister\" >Bienvenue chez</h1> <img className=\"iconBrableRegister\" src={brable} alt=\"icone-user\" /> <span className=\"userRegister\">{username}</span>\n\t\t\t\t\t\t<img className=\"iconBeer\" src={tchin} alt=\"icone-user\" />\n\t\t\t\t\t\t<Link to=\"/PaymentScreen\">\n\t\t\t\t\t\t\t<label className=\"linkPayment\" href=\"\">C'est l'heure de payer ta tournée !</label>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<img className=\"iconBeer2\" src={tchin} alt=\"icone-user\" />\n\t\t\t\t\t\t<p className=\"redirectCount\">Redirection dans {count}s.</p>\n\t\t\t\t\t</ModalBody>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n};"]},"metadata":{},"sourceType":"module"}