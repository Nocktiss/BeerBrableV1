{"ast":null,"code":"import { MIN_PASSWORD_LENGTH } from './const';\nexport default function getSpectedValidationSchema(values) {\n  return {\n    username: [[value => !isEmpty(value), '*Les informations ne sont pas valide'], [value => isUsername(value), '*Les informations ne sont pas valide']],\n    phone: [[value => !isEmpty(value), '*Les informations ne sont pas valide'], [value => isNumber(value), '*Numéro de téléphone non valide']],\n    password: [[value => !isEmpty(value), '*Les informations ne sont pas valide'], [value => value.length >= MIN_PASSWORD_LENGTH, \"\".concat(MIN_PASSWORD_LENGTH, \" num\\xE9ros demand\\xE9 !\")]],\n    passwordConfirmation: [[value => !isEmpty(value), '*Les informations ne sont pas valide'], [value => value === values.password, '*Le code n\\'est pas identique']],\n    consent: [[value => value === true, '*Vous devez accépter les Termes et Conditions']]\n  };\n}\n\nfunction isEmpty(value) {\n  return !value || !value.trim();\n}\n\nfunction isUsername(value) {\n  const USERNAME_REGEXP = /^[A-Za-z0-9]*$/;\n  return USERNAME_REGEXP.test(value);\n}\n\nfunction isNumber(value) {\n  const NUMBER_REGEXP = /^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/;\n  return NUMBER_REGEXP.test(value);\n}","map":{"version":3,"sources":["/home/nocktis/Documents/Stage_Brable_Propre/Brabletest/src/components/RegisterPage/ValidateSchema/getValidationSchema-spected.js"],"names":["MIN_PASSWORD_LENGTH","getSpectedValidationSchema","values","username","value","isEmpty","isUsername","phone","isNumber","password","length","passwordConfirmation","consent","trim","USERNAME_REGEXP","test","NUMBER_REGEXP"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,SAApC;AAEA,eAAe,SAASC,0BAAT,CAAoCC,MAApC,EAA4C;AACzD,SAAO;AACLC,IAAAA,QAAQ,EAAE,CACR,CAACC,KAAK,IAAI,CAACC,OAAO,CAACD,KAAD,CAAlB,EAA2B,sCAA3B,CADQ,EAER,CAACA,KAAK,IAAIE,UAAU,CAACF,KAAD,CAApB,EAA6B,sCAA7B,CAFQ,CADL;AAKLG,IAAAA,KAAK,EAAE,CACL,CAACH,KAAK,IAAI,CAACC,OAAO,CAACD,KAAD,CAAlB,EAA2B,sCAA3B,CADK,EAEL,CAACA,KAAK,IAAII,QAAQ,CAACJ,KAAD,CAAlB,EAA2B,iCAA3B,CAFK,CALF;AASLK,IAAAA,QAAQ,EAAE,CACR,CAACL,KAAK,IAAI,CAACC,OAAO,CAACD,KAAD,CAAlB,EAA0B,sCAA1B,CADQ,EAER,CACEA,KAAK,IAAIA,KAAK,CAACM,MAAN,IAAgBV,mBAD3B,YAEKA,mBAFL,8BAFQ,CATL;AAgBLW,IAAAA,oBAAoB,EAAE,CACpB,CAACP,KAAK,IAAI,CAACC,OAAO,CAACD,KAAD,CAAlB,EAA2B,sCAA3B,CADoB,EAEpB,CAACA,KAAK,IAAIA,KAAK,KAAKF,MAAM,CAACO,QAA3B,EAAqC,+BAArC,CAFoB,CAhBjB;AAoBLG,IAAAA,OAAO,EAAE,CACP,CAACR,KAAK,IAAIA,KAAK,KAAK,IAApB,EAA0B,+CAA1B,CADO;AApBJ,GAAP;AAwBD;;AAED,SAASC,OAAT,CAAiBD,KAAjB,EAAwB;AACtB,SAAO,CAACA,KAAD,IAAU,CAACA,KAAK,CAACS,IAAN,EAAlB;AACD;;AAED,SAASP,UAAT,CAAoBF,KAApB,EAA2B;AACzB,QAAMU,eAAe,GAAG,gBAAxB;AACA,SAAOA,eAAe,CAACC,IAAhB,CAAqBX,KAArB,CAAP;AACD;;AAED,SAASI,QAAT,CAAkBJ,KAAlB,EAAyB;AACvB,QAAMY,aAAa,GAAG,gDAAtB;AACA,SAAOA,aAAa,CAACD,IAAd,CAAmBX,KAAnB,CAAP;AACD","sourcesContent":["import { MIN_PASSWORD_LENGTH } from './const'\n\nexport default function getSpectedValidationSchema(values) {\n  return {\n    username: [\n      [value => !isEmpty(value), '*Les informations ne sont pas valide'],\n      [value => isUsername(value), '*Les informations ne sont pas valide'],\n    ], \n    phone: [\n      [value => !isEmpty(value), '*Les informations ne sont pas valide'],\n      [value => isNumber(value), '*Numéro de téléphone non valide'],\n    ],\n    password: [\n      [value => !isEmpty(value),'*Les informations ne sont pas valide'],\n      [\n        value => value.length >= MIN_PASSWORD_LENGTH, \n        `${MIN_PASSWORD_LENGTH} numéros demandé !`,\n      ],\n    ],\n    passwordConfirmation: [\n      [value => !isEmpty(value), '*Les informations ne sont pas valide'],\n      [value => value === values.password, '*Le code n\\'est pas identique'],\n    ],\n    consent: [\n      [value => value === true, '*Vous devez accépter les Termes et Conditions'],\n    ]\n  }\n}\n\nfunction isEmpty(value) {\n  return !value || !value.trim()\n}\n\nfunction isUsername(value) {\n  const USERNAME_REGEXP = /^[A-Za-z0-9]*$/\n  return USERNAME_REGEXP.test(value)\n}\n\nfunction isNumber(value) {\n  const NUMBER_REGEXP = /^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/\n  return NUMBER_REGEXP.test(value)\n}"]},"metadata":{},"sourceType":"module"}